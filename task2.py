"""
Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
"""
my_list = [14, 'age', False, 4.5, {'A': 1, 'D': 4, 'C': 3}]
for el in my_list:
    print(type(el))

"""
Для списка реализовать обмен значений соседних элементов.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
При нечётном количестве элементов последний сохранить на своём месте.
Для заполнения списка элементов нужно использовать функцию input().
"""
input_list = input("Введите элементы списка: ")
input_list = input_list.split()
print(input_list)
for el in range(0, len(input_list)-1, 2):
    input_list[el], input_list[el + 1] = input_list[el + 1], input_list[el]
print(input_list)

"""
Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и dict.
"""
try:
    number = int(input("Введите номер месяца: "))
except ValueError:
    print("Номер месяца введен неправильно")
else:
    winter = [12, 1, 2]
    spring = [3, 4, 5]
    summer = [6, 7, 8]
    auturn = [9, 10, 11]
    if number in winter:
        print('зима')
    elif number in spring:
        print('весна')
    elif number in summer:
        print('лето')
    elif number in auturn:
        print('осень')
    else:
        print("Месяцев всего 12")

"""
Пользователь вводит строку из нескольких слов, разделённых пробелами. 
Вывести каждое слово с новой строки. 
Строки нужно пронумеровать. 
Если слово длинное, выводить только первые 10 букв в слове.
"""
input_string = input("Введите строку из нескольких слов: ")
input_words = input_string.split()
i = 1
for word in input_words:
    print(i, word[:10])
    i += 1

"""
Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. 
У пользователя нужно запрашивать новый элемент рейтинга. 
Если в рейтинге существуют элементы с одинаковыми значениями, 
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
"""
my_list = [7, 5, 3, 3, 2]
my_list_copy = my_list.copy()
new_list = int(input("Введите число: "))
if new_list <= my_list[-1]:
    my_list.append(new_list)
    print(f'Введенное число {new_list} вставлено в конец рейтинга:{my_list}')
else:
    i = 0
    while i< len(my_list):
        if new_list > my_list[i]:
            my_list.insert(i, new_list)
            print(f'Введенное число занимает позицию {i} в {my_list}')
            break
        i += 1