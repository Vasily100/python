"""
Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""


def div(x, y):
    try:
        return x / y
    except TypeError:
        return "Данные введены неверно!"
    except ZeroDivisionError:
        return "На ноль делить нельзя!"


print(div(8, 2))
print(div('a', 5))
print(div(2, 0))


"""
Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.
"""


def user_data(**kwargs):
    return f"Имя: {kwargs['name']}, Фамилия: {kwargs['surname']}, Дата рождения: {kwargs['birth_year']}, " \
           f"Город проживания: {kwargs['city']}, E-mail: {kwargs['email']}, Телефон: {kwargs['tel']}"


print(user_data(name="Vasily", surname="Smagin", birth_year=1980, city="Moscow", email="wassilii@mail.ru",
                tel="111-11-11"))


"""
Реализовать функцию my_func(), которая принимает три позиционных аргумента 
и возвращает сумму наибольших двух аргументов.
"""


def my_func(a, b, c):
    my_list = [a, b, c]
    my_list.sort(reverse=True)
    return sum(my_list[:2])


print(my_func(300, 550, 1500))


"""
Программа принимает действительное положительное число x и целое отрицательное число y. 
Выполните возведение числа x в степень y. 
Задание реализуйте в виде функции my_func(x, y). 
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
"""

my_func_pow = lambda x, y: x**y


def my_func(x, y) -> float:
    if y > 0:
        return
    elif y == 0:
        return 1
    elif x <= 0:
        return
    else:
        x_pow_y = 1
        while y < 0:
            x_pow_y *= 1/x
            y += 1
        return x_pow_y

result = my_func_pow(2, -5)
print(result)

"""
Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. 
Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введён после нескольких чисел, 
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""


def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input("Введите числа через пробел или S для завершения: ").split()

        res = 0
        for el in range(len(number)):
            if number[el] == "S":
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f"Текущая сумма: {sum_res}")
    print(f"Окончательная сумма: {sum_res}")


my_sum()


"""
Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, 
но с прописной первой буквой. 
Например, print(int_func(‘text’)) -> Text.
"""

"""
Продолжить работу над заданием. 
В программу должна попадать строка из слов, разделённых пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. 
Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
Используйте написанную ранее функцию int_func().
"""


def int_func (*args):
    word = input("Введите строку: ")
    print(word.title())
    return
int_func()